name: Deploy
run-name: ${{github.actor}} started a pipeline
on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  create-release:
    if: github.event.pull_request.merged==true
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: denoland/setup-deno@v2
      - name: compilation
        run: |
          deno compile -A --target x86_64-pc-windows-msvc -o simple_ci_cd_win.exe main.ts
          deno compile -A --target x86_64-unknown-linux-gnu -o simple_ci_cd_lin main.ts
          deno compile -A --target aarch64-apple-darwin -o simple_ci_cd_mac main.ts
          zip -r simple_ci_cd_win.zip simple_ci_cd_win.exe
          zip -r simple_ci_cd_lin.zip simple_ci_cd_lin
          zip -r simple_ci_cd_mac.zip simple_ci_cd_mac
      - name: github release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: Simple_CI/CD.${{github.sha}}
          release_name: Release by ${{github.actor}} - ${{github.sha}}
          body: New release!
          draft: false
          prerelease: false

      - name: Win release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./simple_ci_cd_win.zip
          asset_name: simple_ci_cd_win.zip
          asset_content_type: application/zip
      - name: Linux release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./simple_ci_cd_lin.zip
          asset_name: simple_ci_cd_lin.zip
          asset_content_type: application/zip
      - name: Mac release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./simple_ci_cd_mac.zip
          asset_name: simple_ci_cd_mac.zip
          asset_content_type: application/zip
  create-docker-image:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: simple-ci-cd-app

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        run: |
          docker build . --tag ghcr.io/sammoned1/simple-ci-cd:latest
          docker push ghcr.io/Sammoned1/Simple-CI-CD:latest
  deploy-release:
    needs: create-docker-image
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Build and push Docker image
        run: docker compose pull && docker compose up -d
